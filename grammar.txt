<program> --> <typename> ID <program'>|empty
<program'> --> <datadecls'> <funcprogram>
<datadecls'> --> <id'> <id list'> semicolon <program''>|empty
<program''> --> <typename> ID <dfdecl>|empty
<funcprogram> --> left_parenthesis <parameter list> right_parenthesis <func'> <func list>
<dfdecl> --> <datadecls'>|<funcprogram>
<func list> --> <func> <func list>|empty 
<func> --> <func decl> <func'>
<func'> --> semicolon|left_brace <data decls> <statements> right_brace  
<func decl> --> <type name> ID left_parenthesis <parameter list> right_parenthesis
<type name> --> int|void|binary|decimal
<parameter list> --> void <parameter list'>|<typename'> ID <non-empty list'>|empty
<parameter list'> --> ID <non-empty list'>|empty
<typename'> --> int|binary|decimal
<non-empty list> --> <type name> ID <non-empty list'>
<non-empty list'> --> comma <type name> ID <non-empty list'>|empty
<data decls> --> <type name> <id list> semicolon <data decls>|empty
<id list> --> <id> <id list'>
<id list'> --> comma <id> <id list'>|empty
<id> --> ID <id'>
<id'> --> left_bracket <expression> right_bracket|empty
<block statements> --> left_brace <statements> right_brace
<statements> --> <statement> <statements>|empty
<statement> --> ID <statement'>|<if statement>|<while statement>|<return statement>|<break statement>|<continue statement>|read left_parenthesis ID right_parenthesis semicolon|write left_parenthesis <expression> right_parenthesis semicolon|print left_parenthesis STRING right_parenthesis semicolon
<statement'> --> <id'> equal_sign <expression> semicolon|left_parenthesis <expr list> right parenthesis semicolon
<assignment> --> <id> equal_sign <expression> semicolon
<func call> --> ID left_parenthesis <expr list> right_parenthesis semicolon
<expr list> --> <non-empty expr list>|empty
<non-empty expr list> --> <expression> <non-empty expr list'>
<non-empty expr list'> --> comma <expression> <non-empty expr list'>|empty
<if statement> --> if left_parenthesis <condition expression> right_parenthesis <block statements>
<condition expression> --> <condition> <condition expression'>
<condition expression'> --> empty|<condition op> <condition>
<condition op> --> double_and_sign|double_or_sign 
<condition> --> <expression> <comparison op> <expression>
<comparison op> --> ==|!=|>|>=|<|<=
<while statement> --> while left_parenthesis <condition expression> right_parenthesis <block statements> 
<return statement> --> return <return statement'>
<return statement'> --> <expression> semicolon|semicolon
<break statement> --> break semicolon
<continue statement> --> continue semicolon
<expression> --> <term> <expression'>
<expression'> --> <addop> <term> <expression'>|empty
<addop> --> plus_sign|minus_sign 
<term> --> <factor> <term'>
<term'> --> <mulop> <factor> <term'>|empty
<mulop> --> star_sign|forward_slash 
<factor> --> ID <factor'>|NUMBER|minus_sign NUMBER|left_parenthesis <expression> right_parenthesis
<factor'> --> empty|left_bracket <expression> right_bracket|left_parenthesis <expr list> right_parenthesis